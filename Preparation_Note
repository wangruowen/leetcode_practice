1. For finding a substring (min or max) with certain pattern, we can often use a two pointers pattern
    a. Base on the template of substring with start and cur pointers
       https://leetcode.com/problems/minimum-window-substring/discuss/26808/Here-is-a-10-line-template-that-can-solve-most-'substring'-problems
       Template:
       counter = Counter() / defaultdict / dict()
       start, end = 0, 0
       while end < len(s):
           counter[s[end]] += 1
           end += 1
           while Some Pattern happens or Not happens
               counter[s[start]] -= 1
               start += 1
               Until some pattern satistifed
               min_len = min(min_len, end - start)
           max_len = max(max_len, end - start)
       return min_len or max_len

2. For some string, list, or pointers in a plane, with no orders, we may have to use Hashmap


